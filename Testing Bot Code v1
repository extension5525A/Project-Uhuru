#pragma config(I2C_Usage, I2C1, i2cSensors)
#pragma config(Sensor, dgtl1,  ,               sensorQuadEncoder)
#pragma config(Sensor, I2C_1,  FL,             sensorQuadEncoderOnI2CPort,    , AutoAssign )
#pragma config(Motor,  port1,           BS,            tmotorVex393HighSpeed_HBridge, openLoop)
#pragma config(Motor,  port2,           FL,            tmotorVex393HighSpeed_MC29, openLoop)
#pragma config(Motor,  port3,           FR,            tmotorVex393HighSpeed_MC29, openLoop)
#pragma config(Motor,  port4,           BL,            tmotorVex393HighSpeed_MC29, openLoop)
#pragma config(Motor,  port5,           BR,            tmotorVex393HighSpeed_MC29, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/*---------------------------------------------------------------------------*/
/*                                                                           */
/*        Description: Competition template for VEX EDR                      */
/*                                                                           */
/*---------------------------------------------------------------------------*/

// This code is for the VEX cortex platform
#pragma platform(VEX2)

// Select Download method as "competition"
#pragma competitionControl(Competition)

//Main competition background code...do not modify!
#include "Vex_Competition_Includes.c"

/*---------------------------------------------------------------------------*/
/*                          Pre-Autonomous Functions                         */
/*                                                                           */
/*  You may want to perform some actions before the competition starts.      */
/*  Do them in the following function.  You must return from this function   */
/*  or the autonomous and usercontrol tasks will not be started.  This       */
/*  function is only called once after the cortex has been powered on and    */
/*  not every time that the robot is disabled.                               */
/*---------------------------------------------------------------------------*/

void pre_auton()
{
  // Set bStopTasksBetweenModes to false if you want to keep user created tasks
  // running between Autonomous and Driver controlled modes. You will need to
  // manage all user created tasks if set to false.
  bStopTasksBetweenModes = true;

	// Set bDisplayCompetitionStatusOnLcd to false if you don't want the LCD
	// used by the competition include file, for example, you might want
	// to display your team name on the LCD in this function.
	// bDisplayCompetitionStatusOnLcd = false;

  // All activities that occur before the competition starts
  // Example: clearing encoders, setting servo positions, ...
}

/*---------------------------------------------------------------------------*/
/*                                                                           */
/*                              Autonomous Task                              */
/*                                                                           */
/*  This task is used to control your robot during the autonomous phase of   */
/*  a VEX Competition.                                                       */
/*                                                                           */
/*  You must modify the code to add your own robot specific commands here.   */
/*---------------------------------------------------------------------------*/

task autonomous()
{
  // ..........................................................................
  // Insert user code here.
  // ..........................................................................

  // Remove this function call once you have "real" code.
  AutonomousCodePlaceholderForTesting();
}

/*---------------------------------------------------------------------------*/
/*                                                                           */
/*                              User Control Task                            */
/*                                                                           */
/*  This task is used to control your robot during the user control phase of */
/*  a VEX Competition.                                                       */
/*                                                                           */
/*  You must modify the code to add your own robot specific commands here.   */
/*---------------------------------------------------------------------------*/

task usercontrol()
{
 
  //Sets motor encoder value equal to zero
	nMotorEncoder[FL] = 0;

	//Counts iterations through while loop so there isn't a constant stream of output data
	int iterations = 0;
	
  while (true)
  {
  
  //Driving code in tank drive
  motor[FR] = -vexRT[Ch2];
  motor[BR] = -vexRT[Ch2];
  motor[FL] = vexRT[Ch3];
  motor[BL] = vexRT[Ch3];
  
  
  
  //If 8U or 8D is pressed moves BS which is the bar spinner
	 if(vexRT[Btn8U] == 1){  
   	 motor[BS] = 30;
 	 }else if(vexRT[Btn8D] == 1){
  		motor[BS] = -30;
 	 }else{
 	  motor[BS] = 0;
   }//end if else
   
   
   //Limits amount of output data because computer was lagging
   if(iterations == 20){
  	 //Should Print value of motor encoder
   	 writeDebugStreamLine("int x is: %d", nMotorEncoder[FL]);
   	 
   	 iterations = 0;
   	 
   }
    
  }//While
  
  
}//User control
